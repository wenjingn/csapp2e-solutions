位级整数编码规则

假设
* 整数用补码形式表示.
* 有符号数的右移是算术右移.
* 数据类型int是w位长的. 对于某些题目, 会给定w的值, 但是在其他的情况下, 只要w是8
的整数倍, 你的代码就应该能工作. 你可以用表达式 sizeof(int)<<3 来计算w.

禁止使用
* 条件语句 (if 或者 ?:), 循环, 分支语句, 函数调用和宏调用.
* 除法, 模运算和乘法.
* 相对比较运算符 (<, >, <=, 和>=).

允许的运算
* 强制类型转换, 无论是显式的还是隐式的.
* 所有的位级和逻辑运算.
* 左移和右移, 但是位移的数量只能在0和w-1之间.
* 加法和减法.
* 相等(==)和不相等(!=)测试. (在有些题目中, 也不允许这些运算.)
* 整形常数INT_MIN和INT_MAX.

即使有这些条件的限制, 你仍然可以选择描述性的变量名, 并且使用注释来描述你的解决
方案的逻辑, 尽量提高代码的可读性. 例如, 下面这段代码从整数参数x中抽取出最高有效
字节:

/*Get most significant byte from x */
int get_msb(int x){
    /* Shift by w-8 */
    int shift_val = (sizeof(int)-1)<<3;
    /* Arithmetical shift */
    int xright = x >> shift_val;
    /* Zero all but LSB */
    return xright & 0xff;
}
